#!/bin/bash

# Global Variables for simplicity
SUDOCREDCACHED=1
compName=""
my_name=$(basename -- "$0")
mydir=$(dirname "$0")
adminPW=""
currUser="$(whoami)"
rdpSetupConfirm=0


function credentialCache() {
	# Keeps the admin password in a cache temporarily (or at least attempts to)
	echo ""
	echo "Type in the Admin password here to cache it for further requests (still may prompt)"
	SUDOCREDCACHED=1
	
	while [ $SUDOCREDCACHED != 0 ]; do
		printf ">: "
		read -s adminPW
		
		echo "$adminPW" | sudo -S -v
		
		sudo -nv 2> /dev/null
		SUDOCREDCACHED=$?
		if [ $SUDOCREDCACHED != 0 ] ; then 
		  echo "Incorrect Password, try again"
		  sudo -k
		fi
	done
}

function homebrewInstall() {

    echo ""
    echo "Installing homebrew to enable the use of git."

	# Add permissions for App Setup
	if [ $adminPW == "" ]; then
		credentialCache
	else
		echo "$adminPW" | sudo -S -v
	fi

	sleep 1
	echo ""
	echo "A lot of text is about to appear, but that's okay!"
	sleep 2

	# Load homebrew onto computer temporarily
	yes '' | /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

	# Make sure home brew is updated
	brew update

    # Install Git to pull the latest version of the script
    brew install git
	
	# Install DockUtil for the user setup
	brew install dockutil

	# Install cask to download applications
	brew install cask

	# Install Duti to set default applications
	brew install duti

	# Install the tap for Device Drivers
	brew tap homebrew/cask-drivers

	# Cleanup the unneeded files
	brew cleanup
	
	# Allow other users to utilize Homebrew
	chgrp -R admin /usr/local/*
	chmod -R g+w /usr/local/*
}

#clear
#echo "Checking to make sure Command line tools are installed"
#sleep .5
#echo "If a pop up appears, select install and proceed"
#sleep 1
#xcode-select --install
#read -p "If / Once command lines tools have been installed press enter [ENTER]"

# Keeps the admin password in a cache temporarily (or at least attempts to)
credentialCache

# Load Homebrew and utilities
homebrewInstall

echo "This tool will assist with getting you the correct version of the script"
sleep .5
echo "Type the number associated to the version you'd like to use"
echo "------------------------------------------------------------------------------"
echo "1) Standard Setup Script"
echo "2) Beta Setup Script"
printf ">: "
read userResponse



#commandInstalled=$(xcode-select -p)

#if [ $commandInstalled == 0 ]; then
#    echo "You'll have to install git first, so accept the next prompt, thank you."
#    sleep 1
#    xcode-select --install    
#    read -p "Press Enter when you have installed git [ENTER]>: "
#fi

if [ $userResponse == '1' ]; then
    echo "Setting the download location to your shared folder"
    sleep 1
    cd /Users/Shared
    echo "Downloading the latest version of the Mac Script"
    sleep 1
    rm -rf /Users/Shared/MacScript
    rm -rf /Users/Shared/MacScriptFolder
    sleep 1
    git clone https://github.com/mrneilj/MacScript.git
    sleep 1
    mv -f /Users/Shared/MacScript /Users/Shared/MacScriptFolder
    sleep 1
    mv -f /Users/Shared/MacScriptFolder/MacScript /Users/Shared/MacScript
    echo "------------------------------------------------------------------------------"
    echo "Download Successful, starting MacScript"
    sleep 2
    ./MacScript
elif [ $userResponse == '2' ]; then
    echo "Setting the download location to your shared folder"
    sleep 1
    cd /Users/Shared
    echo "Downloading the beta version of the Mac Script"
    sleep 1
    rm -rf /Users/Shared/MacScript
    rm -rf /Users/Shared/MacScriptFolder
    sleep 1
    git clone -b testing --single-branch https://github.com/mrneilj/MacScript.git
    sleep 1
    mv -f /Users/Shared/MacScript /Users/Shared/MacScriptFolder
    sleep 1
    mv -f /Users/Shared/MacScriptFolder/MacScript /Users/Shared/MacScript
    echo "------------------------------------------------------------------------------"
    echo "Download Successful, starting MacScript BETA"
    sleep 2
    ./MacScript
else
    echo "Incorrect command detected, closing window, try running the program again."
fi

    
